(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> 'NoneType' object is not callable"
p3
sS'layer'
p4
S'/home/shipra/Desktop/Semester 1.2/ITWS-2/web2py/applications/shipra/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\n@auth.requires_login()\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simple replace the two lines below with:\n    return auth.wiki()\n    """\n    c=auth.user_id\n    response.flash = T("Welcome to web2py!")\n    return locals()\n    #return dict(message=T(\'Hello World\'))\ndef input():\n\tform=SQLFORM(db.serch)\n\tif form.process().accepted:\n\t\tresponse.flash=\'form accepted\'\n\telif form.errors:\n\t\tresponse.flash=\'form has errors\'\n\treturn dict(form=form)\n\ndef find():\n\tc=request.get_vars\n\tcode=db(c==db.serch.id).select(db.serch.ALL)\n\treturn locals()\n\n@auth.requires_login()\ndef Personal():\n\tc=auth.user_id\n\tdb.Personal.pid.default=c\n\tdb.Personal.pid.readable=True\n\tdb.Personal.pid.writable=False\n\tform=SQLFORM(db.Personal)\n\tif form.process().accepted:\n\t\tresponse.flash=\'form accepted\'\n\telif form.errors:\n\t\tresponse.flash = \'form has errors\'\n\treturn dict(form=form)\ndef Education():\n\tc=auth.user_id\n\tdb.Education.eid.default=c\n\tdb.Education.eid.readable=True\n\tdb.Education.eid.writable=False\n\tform=SQLFORM(db.Education)\n\tif form.process().accepted:\n\t\tresponse.flash=\'form accepted\'\n\telif form.errors:\n\t\tresponse.flash=\'form has errors\'\n\treturn dict(form=form)\ndef Merit():\t\n\tc=auth.user_id\n\tdb.Merit.mid.default=c\n\tdb.Merit.mid.readable=True\n\tdb.Merit.mid.writable=False\n\tform=SQLFORM(db.Merit)\n\tif form.process().accepted:\n\t\tresponse.flash=\'form accepted\'\n\telif form.errors:\n\t\tresponse.flash=\'form has errors\'\n\treturn dict(form=form)\n\ndef Experience():\n\tc=auth.user_id\n\tdb.Experience.exid.default=c\n\tdb.Experience.exid.readable=True\n\tdb.Experience.exid.writable=False\n\tform=SQLFORM(db.Experience)\n\tif form.process().accepted:\n\t\tresponse.flash=\'form accepted\'\n\telif form.errors:\n\t\tresponse.flash=\'form has errors\'\n\treturn dict(form=form)\ndef create():\n\treturn locals()\n\ndef prin():\n\tc=auth.user_id\n\tcont=db(db.auth_user.id==c).select(db.auth_user.ALL)\n\tpers=db(db.Personal.pid==c).select(db.Personal.ALL)\n\tedu=db(db.Education.eid==c).select(db.Education.ALL)\n\tmer=db(db.Merit.mid==c).select(db.Merit.ALL)\n\texp=db(db.Experience.exid==c).select(db.Experience.ALL)\n\treturn locals()\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\nresponse._vars=response._caller(find)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/shipra/Desktop/Semester 1.2/ITWS-2/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/shipra/Desktop/Semester 1.2/ITWS-2/web2py/applications/shipra/controllers/default.py", line 148, in <module>\n  File "/home/shipra/Desktop/Semester 1.2/ITWS-2/web2py/gluon/globals.py", line 193, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/shipra/Desktop/Semester 1.2/ITWS-2/web2py/applications/shipra/controllers/default.py", line 35, in find\n    code=db(c==db.serch.id).select(db.serch.ALL)\n  File "/home/shipra/Desktop/Semester 1.2/ITWS-2/web2py/gluon/dal.py", line 8905, in select\n    return adapter.select(self.query,fields,attributes)\n  File "/home/shipra/Desktop/Semester 1.2/ITWS-2/web2py/gluon/dal.py", line 2146, in select\n    return super(SQLiteAdapter, self).select(query, fields, attributes)\n  File "/home/shipra/Desktop/Semester 1.2/ITWS-2/web2py/gluon/dal.py", line 1618, in select\n    sql = self._select(query, fields, attributes)\n  File "/home/shipra/Desktop/Semester 1.2/ITWS-2/web2py/gluon/dal.py", line 1478, in _select\n    sql_w = \' WHERE \' + self.expand(query)\n  File "/home/shipra/Desktop/Semester 1.2/ITWS-2/web2py/gluon/dal.py", line 1311, in expand\n    return op(first, second)\n  File "/home/shipra/Desktop/Semester 1.2/ITWS-2/web2py/gluon/dal.py", line 1239, in EQ\n    self.expand(second, first.type))\n  File "/home/shipra/Desktop/Semester 1.2/ITWS-2/web2py/gluon/dal.py", line 1321, in expand\n    return str(self.represent(expression,field_type))\n  File "/home/shipra/Desktop/Semester 1.2/ITWS-2/web2py/gluon/dal.py", line 1746, in represent\n    return str(int(obj))\nTypeError: \'NoneType\' object is not callable\n'
p11
s.